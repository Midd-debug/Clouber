{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import API from\"../api\";import\"./Chat.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Chat(_ref){let{token}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const messagesEndRef=useRef(null);// Scroll autom치tico al final\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[messages]);const sendMessage=async()=>{if(!input.trim())return;const userMessage={sender:\"user\",text:input};setMessages(prev=>[...prev,userMessage]);setInput(\"\");try{const res=await API.post(\"/chat/\",{question:input},{headers:{Authorization:\"Bearer \".concat(token)}});// Animaci칩n de tipeo\nconst answer=res.data.answer;let i=0;const botMessage={sender:\"bot\",text:\"\"};setMessages(prev=>[...prev,botMessage]);const interval=setInterval(()=>{i++;setMessages(prev=>{const newMessages=[...prev];newMessages[newMessages.length-1].text=answer.slice(0,i);return newMessages;});if(i>=answer.length)clearInterval(interval);},25);// velocidad de tipeo\n}catch(err){var _err$response,_err$response$data;alert(\"Error al enviar mensaje: \"+((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||err.message);}};const handleKeyPress=e=>{if(e.key===\"Enter\")sendMessage();};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[messages.map((m,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(m.sender),children:m.text},idx)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,placeholder:\"Escribe tu mensaje...\",onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Enviar\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","API","jsx","_jsx","jsxs","_jsxs","Chat","_ref","token","messages","setMessages","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","userMessage","sender","text","prev","res","post","question","headers","Authorization","concat","answer","data","i","botMessage","interval","setInterval","newMessages","length","slice","clearInterval","err","_err$response","_err$response$data","alert","response","detail","message","handleKeyPress","e","key","className","children","map","m","idx","ref","type","value","placeholder","onChange","target","onKeyPress","onClick"],"sources":["C:/Intel/Clouber/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport API from \"../api\";\r\nimport \"./Chat.css\";\r\n\r\nexport default function Chat({ token }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Scroll autom치tico al final\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const res = await API.post(\r\n        \"/chat/\",\r\n        { question: input },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      // Animaci칩n de tipeo\r\n      const answer = res.data.answer;\r\n      let i = 0;\r\n      const botMessage = { sender: \"bot\", text: \"\" };\r\n      setMessages(prev => [...prev, botMessage]);\r\n\r\n      const interval = setInterval(() => {\r\n        i++;\r\n        setMessages(prev => {\r\n          const newMessages = [...prev];\r\n          newMessages[newMessages.length - 1].text = answer.slice(0, i);\r\n          return newMessages;\r\n        });\r\n        if (i >= answer.length) clearInterval(interval);\r\n      }, 25); // velocidad de tipeo\r\n    } catch (err) {\r\n      alert(\"Error al enviar mensaje: \" + err.response?.data?.detail || err.message);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = e => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"messages\">\r\n        {messages.map((m, idx) => (\r\n          <div key={idx} className={`message ${m.sender}`}>\r\n            {m.text}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          placeholder=\"Escribe tu mensaje...\"\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={sendMessage}>Enviar</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}